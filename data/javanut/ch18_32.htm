<!DOCTYPE HTML PUBLIC "-//ORA//DTD CD HTML 3.2//EN">
<HTML>
<HEAD>
<TITLE>[Chapter 18] 18.32 java.awt.Image (JDK 1.0)</TITLE>
<META NAME="author" CONTENT="David Flanagan">
<META NAME="date" CONTENT="Thu Jul 31 16:10:18 1997">
<META NAME="form" CONTENT="html">
<META NAME="metadata" CONTENT="dublincore.0.1">
<META NAME="objecttype" CONTENT="book part">
<META NAME="otheragent" CONTENT="gmat dbtohtml">
<META NAME="publisher" CONTENT="O'Reilly &amp; Associates, Inc.">
<META NAME="source" CONTENT="SGML">
<META NAME="subject" CONTENT="Java">
<META NAME="title" CONTENT="Java in a Nutshell">
<META HTTP-EQUIV="Content-Script-Type" CONTENT="text/javascript">
</HEAD>
<body vlink="#551a8b" alink="#ff0000" text="#000000" bgcolor="#FFFFFF" link="#0000ee">

<DIV CLASS=htmlnav>
<H1><a href='index.htm'><IMG SRC="gifs/smbanner.gif"
     ALT="Java in a Nutshell" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><A HREF="ch18_31.htm"><IMG SRC="gifs/txtpreva.gif" ALT="Previous" border=0></A></td>
<td width=171 align=center valign=top><B><FONT FACE="ARIEL,HELVETICA,HELV,SANSERIF" SIZE="-1">Chapter 18<br>The java.awt Package</FONT></B></TD>
<td width=172 align=right valign=top><A HREF="ch18_33.htm"><IMG SRC="gifs/txtnexta.gif" ALT="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<DIV CLASS=sect1>
<h2 CLASS=sect1><A CLASS="TITLE" NAME="JNUT2-CH-18-SECT-32">18.32 java.awt.Image (JDK 1.0)</A></h2>

<DIV CLASS=sect2>
<h3 CLASS=sect2><A CLASS="TITLE" NAME="JNUT2-CH-18-SECT-32.1"></A></h3>
</DIV>

<P CLASS=para>
This abstract class represents a displayable image in a
platform-independent way.  An <tt CLASS=literal>Image</tt> object may not
be instantiated directly through a constructor; it must be
obtained through a call like <tt CLASS=literal>Applet.getImage()</tt> or
<tt CLASS=literal>Component.createImage()</tt>.  <tt CLASS=literal>getSource()</tt> method
returns the <tt CLASS=literal>ImageProducer</tt> object that produces the
image data.  <tt CLASS=literal>getGraphics()</tt> returns a
<tt CLASS=literal>Graphics</tt> object that can be used for drawing into
offscreen images (but not images that are downloaded or
generated by an <tt CLASS=literal>ImageProducer</tt>).

<DIV CLASS=screen>
<P>
<PRE>
public abstract class <tt CLASS=literal>Image</tt> extends Object {
    // <tt CLASS=literal>Default Constructor: public Image()</tt>
    // <tt CLASS=literal>Constants</tt>
        <b>1.1</b>  public static final int <tt CLASS=literal>SCALE_AREA_AVERAGING</tt>;
        <b>1.1</b>  public static final int <tt CLASS=literal>SCALE_DEFAULT</tt>;
        <b>1.1</b>  public static final int <tt CLASS=literal>SCALE_FAST</tt>;
        <b>1.1</b>  public static final int <tt CLASS=literal>SCALE_REPLICATE</tt>;
        <b>1.1</b>  public static final int <tt CLASS=literal>SCALE_SMOOTH</tt>;
            public static final Object <tt CLASS=literal>UndefinedProperty</tt>;
    // <tt CLASS=literal>Public Instance Methods</tt>
            public abstract void <tt CLASS=literal>flush</tt>();
            public abstract Graphics <tt CLASS=literal>getGraphics</tt>();
            public abstract int <tt CLASS=literal>getHeight</tt>(ImageObserver <tt CLASS=literal>observer</tt>);
            public abstract Object <tt CLASS=literal>getProperty</tt>(String <tt CLASS=literal>name</tt>, ImageObserver <tt CLASS=literal>observer</tt>);
        <b>1.1</b>  public Image <tt CLASS=literal>getScaledInstance</tt>(int <tt CLASS=literal>width</tt>, int <tt CLASS=literal>height</tt>, int <tt CLASS=literal>hints</tt>);
            public abstract ImageProducer <tt CLASS=literal>getSource</tt>();
            public abstract int <tt CLASS=literal>getWidth</tt>(ImageObserver <tt CLASS=literal>observer</tt>);
}
</PRE>
</DIV>

</DIV>

<DIV CLASS=sect2>
<h3 CLASS=sect2><A CLASS="TITLE" NAME="JNUT2-CH-18-SECT-32.2">Passed To:</A></h3>

<P CLASS=para>
<tt CLASS=literal>Component.checkImage(), 
Component.imageUpdate(), 
Component.prepareImage(), 
ComponentPeer.checkImage(), 
ComponentPeer.prepareImage(), 
Frame.setIconImage(), 
FramePeer.setIconImage(), 
Graphics.drawImage(), 
ImageObserver.imageUpdate(), 
MediaTracker.addImage(), 
MediaTracker.removeImage(), 
PixelGrabber(), 
Toolkit.checkImage(), 
Toolkit.prepareImage()</tt>

</DIV>

<DIV CLASS=sect2>
<h3 CLASS=sect2><A CLASS="TITLE" NAME="JNUT2-CH-18-SECT-32.3">Returned By:</A></h3>

<P CLASS=para>
<tt CLASS=literal>Applet.getImage(), 
AppletContext.getImage(), 
BeanInfo.getIcon(), 
Component.createImage(), 
ComponentPeer.createImage(), 
Frame.getIconImage(), 
Image.getScaledInstance(), 
SimpleBeanInfo.getIcon(), 
SimpleBeanInfo.loadImage(), 
Toolkit.createImage(), 
Toolkit.getImage()</tt>

</DIV>

</DIV>


<DIV CLASS=htmlnav>

<P>
<HR align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><A HREF="ch18_31.htm"><IMG SRC="gifs/txtpreva.gif" ALT="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><A HREF="ch18_33.htm"><IMG SRC="gifs/txtnexta.gif" ALT="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>java.awt.IllegalComponentStateException (JDK 1.1)</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>java.awt.Insets (JDK 1.0)</td>
</tr>
</table>
<hr align=left width=515>

<IMG SRC="gifs/smnavbar.gif" USEMAP="#map" BORDER=0> 
<MAP NAME="map"> 
<AREA SHAPE=RECT COORDS="0,0,108,15" HREF="../javanut/index.htm"
alt="Java in a Nutshell"> 
<AREA SHAPE=RECT COORDS="109,0,200,15" HREF="../langref/index.htm" 
alt="Java Language Reference"> 
<AREA SHAPE=RECT COORDS="203,0,290,15" HREF="../awt/index.htm" 
alt="Java AWT"> 
<AREA SHAPE=RECT COORDS="291,0,419,15" HREF="../fclass/index.htm" 
alt="Java Fundamental Classes"> 
<AREA SHAPE=RECT COORDS="421,0,514,15" HREF="../exp/index.htm" 
alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
