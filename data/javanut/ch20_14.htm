<!DOCTYPE HTML PUBLIC "-//ORA//DTD CD HTML 3.2//EN">
<HTML>
<HEAD>
<TITLE>[Chapter 20] 20.14 java.awt.event.InputEvent (JDK 1.1)</TITLE>
<META NAME="author" CONTENT="David Flanagan">
<META NAME="date" CONTENT="Thu Jul 31 16:13:59 1997">
<META NAME="form" CONTENT="html">
<META NAME="metadata" CONTENT="dublincore.0.1">
<META NAME="objecttype" CONTENT="book part">
<META NAME="otheragent" CONTENT="gmat dbtohtml">
<META NAME="publisher" CONTENT="O'Reilly &amp; Associates, Inc.">
<META NAME="source" CONTENT="SGML">
<META NAME="subject" CONTENT="Java">
<META NAME="title" CONTENT="Java in a Nutshell">
<META HTTP-EQUIV="Content-Script-Type" CONTENT="text/javascript">
</HEAD>
<body vlink="#551a8b" alink="#ff0000" text="#000000" bgcolor="#FFFFFF" link="#0000ee">

<DIV CLASS=htmlnav>
<H1><a href='index.htm'><IMG SRC="gifs/smbanner.gif"
     ALT="Java in a Nutshell" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><A HREF="ch20_13.htm"><IMG SRC="gifs/txtpreva.gif" ALT="Previous" border=0></A></td>
<td width=171 align=center valign=top><B><FONT FACE="ARIEL,HELVETICA,HELV,SANSERIF" SIZE="-1">Chapter 20<br>The java.awt.event Package</FONT></B></TD>
<td width=172 align=right valign=top><A HREF="ch20_15.htm"><IMG SRC="gifs/txtnexta.gif" ALT="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<DIV CLASS=sect1>
<h2 CLASS=sect1><A CLASS="TITLE" NAME="JNUT2-CH-20-SECT-14">20.14 java.awt.event.InputEvent (JDK 1.1)</A></h2>

<DIV CLASS=sect2>
<h3 CLASS=sect2><A CLASS="TITLE" NAME="JNUT2-CH-20-SECT-14.1"></A></h3>
</DIV>

<P CLASS=para>
This abstract class serves as the superclass for the raw user
input event types <tt CLASS=literal>MouseEvent</tt> and <tt CLASS=literal>KeyEvent</tt>.

<P CLASS=para>
Use the inherited <tt CLASS=literal>getComponent()</tt> to determine in which
component the event occurred. Use
<tt CLASS=literal>getWhen()</tt> to obtain a timestamp for the event.  Use
<tt CLASS=literal>getModifiers()</tt> to determine which keyboard modifier
keys or mouse buttons were down when the event occurred.
You can decode the <tt CLASS=literal>getModifiers()</tt> return value using
the various <tt CLASS=literal>_MASK</tt> constants defined by this class.
The class also defines four convenience methods for
determining the state of keyboard modifiers.

<P CLASS=para>
In Java 1.1, input events are delivered to the appropriate
listener objects before they are delivered to the AWT
components themselves.  If a listener calls the
<tt CLASS=literal>consume()</tt> method of the event, the event is not passed
on to the component.  For example, if a listener registered
on a <tt CLASS=literal>Button</tt> "consumes" a mouse click, it 
prevents the button itself from responding to that event.
You can use <tt CLASS=literal>isConsumed()</tt> to test whether some other
listener object has already consumed the event.

<DIV CLASS=screen>
<P>
<PRE>
public abstract class <tt CLASS=literal>InputEvent</tt> extends ComponentEvent {
    // <tt CLASS=literal>No Constructor</tt>
    // <tt CLASS=literal>Constants</tt>
            public static final int <tt CLASS=literal>ALT_MASK</tt>;
            public static final int <tt CLASS=literal>BUTTON1_MASK</tt>;
            public static final int <tt CLASS=literal>BUTTON2_MASK</tt>;
            public static final int <tt CLASS=literal>BUTTON3_MASK</tt>;
            public static final int <tt CLASS=literal>CTRL_MASK</tt>;
            public static final int <tt CLASS=literal>META_MASK</tt>;
            public static final int <tt CLASS=literal>SHIFT_MASK</tt>;
    // <tt CLASS=literal>Public Instance Methods</tt>
            public void <tt CLASS=literal>consume</tt>();  //<tt CLASS=literal> Overrides AWTEvent</tt>
            public int <tt CLASS=literal>getModifiers</tt>();
            public long <tt CLASS=literal>getWhen</tt>();
            public boolean <tt CLASS=literal>isAltDown</tt>();
            public boolean <tt CLASS=literal>isConsumed</tt>();  //<tt CLASS=literal> Overrides AWTEvent</tt>
            public boolean <tt CLASS=literal>isControlDown</tt>();
            public boolean <tt CLASS=literal>isMetaDown</tt>();
            public boolean <tt CLASS=literal>isShiftDown</tt>();
}
</PRE>
</DIV>

</DIV>

<DIV CLASS=sect2>
<h3 CLASS=sect2><A CLASS="TITLE" NAME="JNUT2-CH-20-SECT-14.2">Hierarchy:</A></h3>

<P CLASS=para>
<tt CLASS=literal>Object->EventObject(Serializable)->AWTEvent->ComponentEvent->InputEvent</tt>

</DIV>

<DIV CLASS=sect2>
<h3 CLASS=sect2><A CLASS="TITLE" NAME="JNUT2-CH-20-SECT-14.3">Extended By:</A></h3>

<P CLASS=para>
<tt CLASS=literal>KeyEvent, 
MouseEvent</tt>

</DIV>

</DIV>


<DIV CLASS=htmlnav>

<P>
<HR align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><A HREF="ch20_13.htm"><IMG SRC="gifs/txtpreva.gif" ALT="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><A HREF="ch20_15.htm"><IMG SRC="gifs/txtnexta.gif" ALT="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>java.awt.event.FocusListener (JDK 1.1)</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>java.awt.event.ItemEvent (JDK 1.1)</td>
</tr>
</table>
<hr align=left width=515>

<IMG SRC="gifs/smnavbar.gif" USEMAP="#map" BORDER=0> 
<MAP NAME="map"> 
<AREA SHAPE=RECT COORDS="0,0,108,15" HREF="../javanut/index.htm"
alt="Java in a Nutshell"> 
<AREA SHAPE=RECT COORDS="109,0,200,15" HREF="../langref/index.htm" 
alt="Java Language Reference"> 
<AREA SHAPE=RECT COORDS="203,0,290,15" HREF="../awt/index.htm" 
alt="Java AWT"> 
<AREA SHAPE=RECT COORDS="291,0,419,15" HREF="../fclass/index.htm" 
alt="Java Fundamental Classes"> 
<AREA SHAPE=RECT COORDS="421,0,514,15" HREF="../exp/index.htm" 
alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
