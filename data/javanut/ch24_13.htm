<!DOCTYPE HTML PUBLIC "-//ORA//DTD CD HTML 3.2//EN">
<HTML>
<HEAD>
<TITLE>[Chapter 24] 24.13 java.io.DataOutputStream (JDK 1.0)</TITLE>
<META NAME="author" CONTENT="David Flanagan">
<META NAME="date" CONTENT="Thu Jul 31 16:21:55 1997">
<META NAME="form" CONTENT="html">
<META NAME="metadata" CONTENT="dublincore.0.1">
<META NAME="objecttype" CONTENT="book part">
<META NAME="otheragent" CONTENT="gmat dbtohtml">
<META NAME="publisher" CONTENT="O'Reilly &amp; Associates, Inc.">
<META NAME="source" CONTENT="SGML">
<META NAME="subject" CONTENT="Java">
<META NAME="title" CONTENT="Java in a Nutshell">
<META HTTP-EQUIV="Content-Script-Type" CONTENT="text/javascript">
</HEAD>
<body vlink="#551a8b" alink="#ff0000" text="#000000" bgcolor="#FFFFFF" link="#0000ee">

<DIV CLASS=htmlnav>
<H1><a href='index.htm'><IMG SRC="gifs/smbanner.gif"
     ALT="Java in a Nutshell" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><A HREF="ch24_12.htm"><IMG SRC="gifs/txtpreva.gif" ALT="Previous" border=0></A></td>
<td width=171 align=center valign=top><B><FONT FACE="ARIEL,HELVETICA,HELV,SANSERIF" SIZE="-1">Chapter 24<br>The java.io Package</FONT></B></TD>
<td width=172 align=right valign=top><A HREF="ch24_14.htm"><IMG SRC="gifs/txtnexta.gif" ALT="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<DIV CLASS=sect1>
<h2 CLASS=sect1><A CLASS="TITLE" NAME="JNUT2-CH-24-SECT-13">24.13 java.io.DataOutputStream (JDK 1.0)</A></h2>

<DIV CLASS=sect2>
<h3 CLASS=sect2><A CLASS="TITLE" NAME="JNUT2-CH-24-SECT-13.1"></A></h3>
</DIV>

<P CLASS=para>
This class is a subclass of <tt CLASS=literal>FilterOutputStream</tt> that
allows you to write Java primitive data types in a
portable binary format. Create a <tt CLASS=literal>DataOutputStream</tt> by specifying
the <tt CLASS=literal>OutputStream</tt> that is to be filtered in the call
to the constructor.

<P CLASS=para>
Many of this class's methods write a single Java primitive
type, in binary format to the output stream.
<tt CLASS=literal>write()</tt> writes a single byte, an array, or a
subarray of bytes. <tt CLASS=literal>flush()</tt> forces any
buffered data to be output. <tt CLASS=literal>size()</tt> returns the
number of bytes written so far.

<P CLASS=para>
<tt CLASS=literal>writeUTF()</tt> outputs a Java string of Unicode
characters using a slightly modified version of the UTF-8
"transformation format."  UTF-8 is an ASCII-compatible
encoding of Unicode characters that is often used for the
transmission and storage of Unicode text. Except for the
<tt CLASS=literal>writeUTF()</tt> method, this class is used for binary
output of data.  Textual output should be done with
<tt CLASS=literal>PrintWriter</tt>, or <tt CLASS=literal>PrintStream</tt> in Java 1.0.

<P CLASS=para>
<tt CLASS=literal>DataOutputStream</tt> only has methods to output
primitive types.  Use <tt CLASS=literal>ObjectOutputStream</tt> to output
object values.

<DIV CLASS=screen>
<P>
<PRE>
public class <tt CLASS=literal>DataOutputStream</tt> extends FilterOutputStream implements DataOutput {
    // <tt CLASS=literal>Public Constructor</tt>
            public <tt CLASS=literal>DataOutputStream</tt>(OutputStream <tt CLASS=literal>out</tt>);
    // <tt CLASS=literal>Protected Instance Variables</tt>
            protected int <tt CLASS=literal>written</tt>;
    // <tt CLASS=literal>Public Instance Methods</tt>
            public void <tt CLASS=literal>flush</tt>() throws IOException;  //<tt CLASS=literal> Overrides FilterOutputStream</tt>
            public final int <tt CLASS=literal>size</tt>();
            public synchronized void <tt CLASS=literal>write</tt>(int <tt CLASS=literal>b</tt>) throws IOException;  //<tt CLASS=literal> Overrides FilterOutputStream</tt>
            public synchronized void <tt CLASS=literal>write</tt>(byte[] <tt CLASS=literal>b</tt>, int <tt CLASS=literal>off</tt>, int <tt CLASS=literal>len</tt>) throws IOException;  //<tt CLASS=literal> Overrides FilterOutputStream</tt>
            public final void <tt CLASS=literal>writeBoolean</tt>(boolean <tt CLASS=literal>v</tt>) throws IOException;  //<tt CLASS=literal> From DataOutput</tt>
            public final void <tt CLASS=literal>writeByte</tt>(int <tt CLASS=literal>v</tt>) throws IOException;  //<tt CLASS=literal> From DataOutput</tt>
            public final void <tt CLASS=literal>writeBytes</tt>(String <tt CLASS=literal>s</tt>) throws IOException;  //<tt CLASS=literal> From DataOutput</tt>
            public final void <tt CLASS=literal>writeChar</tt>(int <tt CLASS=literal>v</tt>) throws IOException;  //<tt CLASS=literal> From DataOutput</tt>
            public final void <tt CLASS=literal>writeChars</tt>(String <tt CLASS=literal>s</tt>) throws IOException;  //<tt CLASS=literal> From DataOutput</tt>
            public final void <tt CLASS=literal>writeDouble</tt>(double <tt CLASS=literal>v</tt>) throws IOException;  //<tt CLASS=literal> From DataOutput</tt>
            public final void <tt CLASS=literal>writeFloat</tt>(float <tt CLASS=literal>v</tt>) throws IOException;  //<tt CLASS=literal> From DataOutput</tt>
            public final void <tt CLASS=literal>writeInt</tt>(int <tt CLASS=literal>v</tt>) throws IOException;  //<tt CLASS=literal> From DataOutput</tt>
            public final void <tt CLASS=literal>writeLong</tt>(long <tt CLASS=literal>v</tt>) throws IOException;  //<tt CLASS=literal> From DataOutput</tt>
            public final void <tt CLASS=literal>writeShort</tt>(int <tt CLASS=literal>v</tt>) throws IOException;  //<tt CLASS=literal> From DataOutput</tt>
            public final void <tt CLASS=literal>writeUTF</tt>(String <tt CLASS=literal>str</tt>) throws IOException;  //<tt CLASS=literal> From DataOutput</tt>
}
</PRE>
</DIV>

</DIV>

<DIV CLASS=sect2>
<h3 CLASS=sect2><A CLASS="TITLE" NAME="JNUT2-CH-24-SECT-13.2">Hierarchy:</A></h3>

<P CLASS=para>
Object->OutputStream->FilterOutputStream->DataOutputStream(DataOutput)

</DIV>

</DIV>


<DIV CLASS=htmlnav>

<P>
<HR align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><A HREF="ch24_12.htm"><IMG SRC="gifs/txtpreva.gif" ALT="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><A HREF="ch24_14.htm"><IMG SRC="gifs/txtnexta.gif" ALT="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>java.io.DataOutput (JDK 1.0)</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>java.io.EOFException (JDK 1.0)</td>
</tr>
</table>
<hr align=left width=515>

<IMG SRC="gifs/smnavbar.gif" USEMAP="#map" BORDER=0> 
<MAP NAME="map"> 
<AREA SHAPE=RECT COORDS="0,0,108,15" HREF="../javanut/index.htm"
alt="Java in a Nutshell"> 
<AREA SHAPE=RECT COORDS="109,0,200,15" HREF="../langref/index.htm" 
alt="Java Language Reference"> 
<AREA SHAPE=RECT COORDS="203,0,290,15" HREF="../awt/index.htm" 
alt="Java AWT"> 
<AREA SHAPE=RECT COORDS="291,0,419,15" HREF="../fclass/index.htm" 
alt="Java Fundamental Classes"> 
<AREA SHAPE=RECT COORDS="421,0,514,15" HREF="../exp/index.htm" 
alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
