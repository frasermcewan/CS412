<!DOCTYPE HTML PUBLIC "-//ORA//DTD CD HTML 3.2//EN">
<HTML>
<HEAD>
<TITLE>[Chapter 18] 18.16 java.awt.Container (JDK 1.0)</TITLE>
<META NAME="author" CONTENT="David Flanagan">
<META NAME="date" CONTENT="Thu Jul 31 16:09:46 1997">
<META NAME="form" CONTENT="html">
<META NAME="metadata" CONTENT="dublincore.0.1">
<META NAME="objecttype" CONTENT="book part">
<META NAME="otheragent" CONTENT="gmat dbtohtml">
<META NAME="publisher" CONTENT="O'Reilly &amp; Associates, Inc.">
<META NAME="source" CONTENT="SGML">
<META NAME="subject" CONTENT="Java">
<META NAME="title" CONTENT="Java in a Nutshell">
<META HTTP-EQUIV="Content-Script-Type" CONTENT="text/javascript">
</HEAD>
<body vlink="#551a8b" alink="#ff0000" text="#000000" bgcolor="#FFFFFF" link="#0000ee">

<DIV CLASS=htmlnav>
<H1><a href='index.htm'><IMG SRC="gifs/smbanner.gif"
     ALT="Java in a Nutshell" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><A HREF="ch18_15.htm"><IMG SRC="gifs/txtpreva.gif" ALT="Previous" border=0></A></td>
<td width=171 align=center valign=top><B><FONT FACE="ARIEL,HELVETICA,HELV,SANSERIF" SIZE="-1">Chapter 18<br>The java.awt Package</FONT></B></TD>
<td width=172 align=right valign=top><A HREF="ch18_17.htm"><IMG SRC="gifs/txtnexta.gif" ALT="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<DIV CLASS=sect1>
<h2 CLASS=sect1><A CLASS="TITLE" NAME="JNUT2-CH-18-SECT-16">18.16 java.awt.Container (JDK 1.0)</A></h2>

<DIV CLASS=sect2>
<h3 CLASS=sect2><A CLASS="TITLE" NAME="JNUT2-CH-18-SECT-16.1"></A></h3>
</DIV>

<P CLASS=para>
This class implements a component that can contain other components.
You cannot instantiate <tt CLASS=literal>Container</tt> directly, but must
use one of its subclasses,
such as <tt CLASS=literal>Panel</tt>, <tt CLASS=literal>Frame</tt>, or <tt CLASS=literal>Dialog</tt>.
Once a <tt CLASS=literal>Container</tt> is created, you may set its <tt CLASS=literal>LayoutManager</tt>
with <tt CLASS=literal>setLayout()</tt>, add components to it with
<tt CLASS=literal>add()</tt>, and remove them with <tt CLASS=literal>remove()</tt>.
<tt CLASS=literal>getComponents()</tt> returns an array of the components
contained in a <tt CLASS=literal>Container</tt>. <tt CLASS=literal>locate()</tt>
determines within which contained component a specified
point falls.  <tt CLASS=literal>list()</tt> produces helpful debugging
output.

<DIV CLASS=screen>
<P>
<PRE>
public abstract class <tt CLASS=literal>Container</tt> extends Component {
    // <tt CLASS=literal>Protected Constructor</tt>
        <b>1.1</b>  protected <tt CLASS=literal>Container</tt>();
    // <tt CLASS=literal>Public Instance Methods</tt>
            public Component <tt CLASS=literal>add</tt>(Component <tt CLASS=literal>comp</tt>);
            public Component <tt CLASS=literal>add</tt>(String <tt CLASS=literal>name</tt>, Component <tt CLASS=literal>comp</tt>);
            public Component <tt CLASS=literal>add</tt>(Component <tt CLASS=literal>comp</tt>, int <tt CLASS=literal>index</tt>);
        <b>1.1</b>  public void <tt CLASS=literal>add</tt>(Component <tt CLASS=literal>comp</tt>, Object <tt CLASS=literal>constraints</tt>);
        <b>1.1</b>  public void <tt CLASS=literal>add</tt>(Component <tt CLASS=literal>comp</tt>, Object <tt CLASS=literal>constraints</tt>, int <tt CLASS=literal>index</tt>);
        <b>1.1</b>  public void <tt CLASS=literal>addContainerListener</tt>(ContainerListener <tt CLASS=literal>l</tt>);
            public void <tt CLASS=literal>addNotify</tt>();  //<tt CLASS=literal> Overrides Component</tt>
        #   public int <tt CLASS=literal>countComponents</tt>();
        #   public void <tt CLASS=literal>deliverEvent</tt>(Event <tt CLASS=literal>e</tt>);  //<tt CLASS=literal> Overrides Component</tt>
        <b>1.1</b>  public void <tt CLASS=literal>doLayout</tt>();  //<tt CLASS=literal> Overrides Component</tt>
        <b>1.1</b>  public float <tt CLASS=literal>getAlignmentX</tt>();  //<tt CLASS=literal> Overrides Component</tt>
        <b>1.1</b>  public float <tt CLASS=literal>getAlignmentY</tt>();  //<tt CLASS=literal> Overrides Component</tt>
            public Component <tt CLASS=literal>getComponent</tt>(int <tt CLASS=literal>n</tt>);
        <b>1.1</b>  public Component <tt CLASS=literal>getComponentAt</tt>(int <tt CLASS=literal>x</tt>, int <tt CLASS=literal>y</tt>);  //<tt CLASS=literal> Overrides Component</tt>
        <b>1.1</b>  public Component <tt CLASS=literal>getComponentAt</tt>(Point <tt CLASS=literal>p</tt>);  //<tt CLASS=literal> Overrides Component</tt>
        <b>1.1</b>  public int <tt CLASS=literal>getComponentCount</tt>();
            public Component[] <tt CLASS=literal>getComponents</tt>();
        <b>1.1</b>  public Insets <tt CLASS=literal>getInsets</tt>();
            public LayoutManager <tt CLASS=literal>getLayout</tt>();
        <b>1.1</b>  public Dimension <tt CLASS=literal>getMaximumSize</tt>();  //<tt CLASS=literal> Overrides Component</tt>
        <b>1.1</b>  public Dimension <tt CLASS=literal>getMinimumSize</tt>();  //<tt CLASS=literal> Overrides Component</tt>
        <b>1.1</b>  public Dimension <tt CLASS=literal>getPreferredSize</tt>();  //<tt CLASS=literal> Overrides Component</tt>
        #   public Insets <tt CLASS=literal>insets</tt>();
        <b>1.1</b>  public void <tt CLASS=literal>invalidate</tt>();  //<tt CLASS=literal> Overrides Component</tt>
        <b>1.1</b>  public boolean <tt CLASS=literal>isAncestorOf</tt>(Component <tt CLASS=literal>c</tt>);
        #   public void <tt CLASS=literal>layout</tt>();  //<tt CLASS=literal> Overrides Component</tt>
            public void <tt CLASS=literal>list</tt>(PrintStream <tt CLASS=literal>out</tt>, int <tt CLASS=literal>indent</tt>);  //<tt CLASS=literal> Overrides Component</tt>
        <b>1.1</b>  public void <tt CLASS=literal>list</tt>(PrintWriter <tt CLASS=literal>out</tt>, int <tt CLASS=literal>indent</tt>);  //<tt CLASS=literal> Overrides Component</tt>
        #   public Component <tt CLASS=literal>locate</tt>(int <tt CLASS=literal>x</tt>, int <tt CLASS=literal>y</tt>);  //<tt CLASS=literal> Overrides Component</tt>
        #   public Dimension <tt CLASS=literal>minimumSize</tt>();  //<tt CLASS=literal> Overrides Component</tt>
        <b>1.1</b>  public void <tt CLASS=literal>paint</tt>(Graphics <tt CLASS=literal>g</tt>);  //<tt CLASS=literal> Overrides Component</tt>
            public void <tt CLASS=literal>paintComponents</tt>(Graphics <tt CLASS=literal>g</tt>);
        #   public Dimension <tt CLASS=literal>preferredSize</tt>();  //<tt CLASS=literal> Overrides Component</tt>
        <b>1.1</b>  public void <tt CLASS=literal>print</tt>(Graphics <tt CLASS=literal>g</tt>);  //<tt CLASS=literal> Overrides Component</tt>
            public void <tt CLASS=literal>printComponents</tt>(Graphics <tt CLASS=literal>g</tt>);
        <b>1.1</b>  public void <tt CLASS=literal>remove</tt>(int <tt CLASS=literal>index</tt>);
            public void <tt CLASS=literal>remove</tt>(Component <tt CLASS=literal>comp</tt>);
            public void <tt CLASS=literal>removeAll</tt>();
        <b>1.1</b>  public void <tt CLASS=literal>removeContainerListener</tt>(ContainerListener <tt CLASS=literal>l</tt>);
            public void <tt CLASS=literal>removeNotify</tt>();  //<tt CLASS=literal> Overrides Component</tt>
            public void <tt CLASS=literal>setLayout</tt>(LayoutManager <tt CLASS=literal>mgr</tt>);
            public void <tt CLASS=literal>validate</tt>();  //<tt CLASS=literal> Overrides Component</tt>
    // <tt CLASS=literal>Protected Instance Methods</tt>
        <b>1.1</b>  protected void <tt CLASS=literal>addImpl</tt>(Component <tt CLASS=literal>comp</tt>, Object <tt CLASS=literal>constraints</tt>, int <tt CLASS=literal>index</tt>);
            protected String <tt CLASS=literal>paramString</tt>();  //<tt CLASS=literal> Overrides Component</tt>
        <b>1.1</b>  protected void <tt CLASS=literal>processContainerEvent</tt>(ContainerEvent <tt CLASS=literal>e</tt>);
        <b>1.1</b>  protected void <tt CLASS=literal>processEvent</tt>(AWTEvent <tt CLASS=literal>e</tt>);  //<tt CLASS=literal> Overrides Component</tt>
        <b>1.1</b>  protected void <tt CLASS=literal>validateTree</tt>();
}
</PRE>
</DIV>

</DIV>

<DIV CLASS=sect2>
<h3 CLASS=sect2><A CLASS="TITLE" NAME="JNUT2-CH-18-SECT-16.2">Hierarchy:</A></h3>

<P CLASS=para>
<tt CLASS=literal>Object->Component(ImageObserver, MenuContainer, Serializable)->Container</tt>

</DIV>

<DIV CLASS=sect2>
<h3 CLASS=sect2><A CLASS="TITLE" NAME="JNUT2-CH-18-SECT-16.3">Extended By:</A></h3>

<P CLASS=para>
<tt CLASS=literal>Panel, 
ScrollPane, 
Window</tt>

</DIV>

<DIV CLASS=sect2>
<h3 CLASS=sect2><A CLASS="TITLE" NAME="JNUT2-CH-18-SECT-16.4">Passed To:</A></h3>

<P CLASS=para>
<tt CLASS=literal>BorderLayout.getLayoutAlignmentX(), 
BorderLayout.getLayoutAlignmentY(), 
BorderLayout.invalidateLayout(), 
BorderLayout.layoutContainer(), 
BorderLayout.maximumLayoutSize(), 
BorderLayout.minimumLayoutSize(), 
BorderLayout.preferredLayoutSize(), 
CardLayout.first(), 
CardLayout.getLayoutAlignmentX(), 
CardLayout.getLayoutAlignmentY(), 
CardLayout.invalidateLayout(), 
CardLayout.last(), 
CardLayout.layoutContainer(), 
CardLayout.maximumLayoutSize(), 
CardLayout.minimumLayoutSize(), 
CardLayout.next(), 
CardLayout.preferredLayoutSize(), 
CardLayout.previous(), 
CardLayout.show(), 
FlowLayout.layoutContainer(), 
FlowLayout.minimumLayoutSize(), 
FlowLayout.preferredLayoutSize(), 
GridBagLayout.ArrangeGrid(), 
GridBagLayout.getLayoutAlignmentX(), 
GridBagLayout.getLayoutAlignmentY(), 
GridBagLayout.GetLayoutInfo(), 
GridBagLayout.GetMinSize(), 
GridBagLayout.invalidateLayout(), 
GridBagLayout.layoutContainer(), 
GridBagLayout.maximumLayoutSize(), 
GridBagLayout.minimumLayoutSize(), 
GridBagLayout.preferredLayoutSize(), 
GridLayout.layoutContainer(), 
GridLayout.minimumLayoutSize(), 
GridLayout.preferredLayoutSize(), 
LayoutManager.layoutContainer(), 
LayoutManager.minimumLayoutSize(), 
LayoutManager.preferredLayoutSize(), 
LayoutManager2.getLayoutAlignmentX(), 
LayoutManager2.getLayoutAlignmentY(), 
LayoutManager2.invalidateLayout(), 
LayoutManager2.maximumLayoutSize()</tt>

</DIV>

<DIV CLASS=sect2>
<h3 CLASS=sect2><A CLASS="TITLE" NAME="JNUT2-CH-18-SECT-16.5">Returned By:</A></h3>

<P CLASS=para>
<tt CLASS=literal>Component.getParent(), 
ContainerEvent.getContainer(), 
Toolkit.getNativeContainer()</tt>

</DIV>

</DIV>


<DIV CLASS=htmlnav>

<P>
<HR align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><A HREF="ch18_15.htm"><IMG SRC="gifs/txtpreva.gif" ALT="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><A HREF="ch18_17.htm"><IMG SRC="gifs/txtnexta.gif" ALT="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>java.awt.Component (JDK 1.0)</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>java.awt.Cursor (JDK 1.1)</td>
</tr>
</table>
<hr align=left width=515>

<IMG SRC="gifs/smnavbar.gif" USEMAP="#map" BORDER=0> 
<MAP NAME="map"> 
<AREA SHAPE=RECT COORDS="0,0,108,15" HREF="../javanut/index.htm"
alt="Java in a Nutshell"> 
<AREA SHAPE=RECT COORDS="109,0,200,15" HREF="../langref/index.htm" 
alt="Java Language Reference"> 
<AREA SHAPE=RECT COORDS="203,0,290,15" HREF="../awt/index.htm" 
alt="Java AWT"> 
<AREA SHAPE=RECT COORDS="291,0,419,15" HREF="../fclass/index.htm" 
alt="Java Fundamental Classes"> 
<AREA SHAPE=RECT COORDS="421,0,514,15" HREF="../exp/index.htm" 
alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
